"""Initial migration

Revision ID: 4bebed130700
Revises: 
Create Date: 2025-08-23 02:35:41.900548

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4bebed130700'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cases',
    sa.Column('caseno', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=True),
    sa.Column('client_type', sa.String(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('caseno')
    )
    op.create_table('process_data_types',
    sa.Column('process_data_type_no', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('process_data_type_no')
    )
    op.create_table('process_types',
    sa.Column('process_type_no', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('process_type_no')
    )
    op.create_table('status',
    sa.Column('statusno', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('statusno')
    )
    op.create_table('process_definitions',
    sa.Column('process_definition_no', sa.Integer(), nullable=False),
    sa.Column('process_type_no', sa.Integer(), nullable=True),
    sa.Column('start_task_no', sa.Integer(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('is_active', sa.Integer(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['process_type_no'], ['process_types.process_type_no'], ),
    sa.PrimaryKeyConstraint('process_definition_no')
    )
    op.create_table('processes',
    sa.Column('processno', sa.Integer(), nullable=False),
    sa.Column('case_no', sa.Integer(), nullable=True),
    sa.Column('status_no', sa.Integer(), nullable=True),
    sa.Column('process_type_no', sa.Integer(), nullable=True),
    sa.Column('date_started', sa.DateTime(), nullable=True),
    sa.Column('date_ended', sa.DateTime(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['case_no'], ['cases.caseno'], ),
    sa.ForeignKeyConstraint(['process_type_no'], ['process_types.process_type_no'], ),
    sa.ForeignKeyConstraint(['status_no'], ['status.statusno'], ),
    sa.PrimaryKeyConstraint('processno')
    )
    op.create_table('process_data',
    sa.Column('process_data_no', sa.Integer(), nullable=False),
    sa.Column('processno', sa.Integer(), nullable=True),
    sa.Column('process_data_type_no', sa.Integer(), nullable=True),
    sa.Column('fieldname', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['process_data_type_no'], ['process_data_types.process_data_type_no'], ),
    sa.ForeignKeyConstraint(['processno'], ['processes.processno'], ),
    sa.PrimaryKeyConstraint('process_data_no')
    )
    op.create_table('tasks',
    sa.Column('taskno', sa.Integer(), nullable=False),
    sa.Column('process_definition_no', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('start_task_no', sa.Integer(), nullable=True),
    sa.Column('next_task_no', sa.Integer(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['process_definition_no'], ['process_definitions.process_definition_no'], ),
    sa.PrimaryKeyConstraint('taskno')
    )
    op.create_table('steps',
    sa.Column('stepno', sa.Integer(), nullable=False),
    sa.Column('processno', sa.Integer(), nullable=True),
    sa.Column('taskno', sa.Integer(), nullable=True),
    sa.Column('status_no', sa.Integer(), nullable=True),
    sa.Column('date_started', sa.DateTime(), nullable=True),
    sa.Column('date_ended', sa.DateTime(), nullable=True),
    sa.Column('usrid', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['processno'], ['processes.processno'], ),
    sa.ForeignKeyConstraint(['status_no'], ['status.statusno'], ),
    sa.ForeignKeyConstraint(['taskno'], ['tasks.taskno'], ),
    sa.PrimaryKeyConstraint('stepno')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('steps')
    op.drop_table('tasks')
    op.drop_table('process_data')
    op.drop_table('processes')
    op.drop_table('process_definitions')
    op.drop_table('status')
    op.drop_table('process_types')
    op.drop_table('process_data_types')
    op.drop_table('cases')
    # ### end Alembic commands ###
